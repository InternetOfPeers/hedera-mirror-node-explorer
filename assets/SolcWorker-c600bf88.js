self.onmessage=e=>{p(e).then(t=>{const s={report:t};self.postMessage(s)}).catch(t=>{const s={error:t};self.postMessage(s)})};async function p(e){const t=e.data,s=t.input,o=await m(t.version),n={},r={import:c=>{const i={},u=g(c,s);return u!==null?(i.contents=s.sources[u].content,n[c]=u):i.error="File not found: "+c,i}};return{output:JSON.parse(o.compile(JSON.stringify(t.input),r)),resolution:n}}async function m(e){let t;if("importScripts"in self){const o="https://binaries.soliditylang.org/bin/soljson-"+e+".js";self.importScripts(o);const n=(await import("./wrapper-575a4497.js").then(function(l){return l.w})).default;t=n(self.Module)}else{const o=await import("./index-da62348a.js").then(function(n){return n.i});t=new Promise((n,l)=>{o.loadRemoteVersion(e,function(r,f){r?l(r):n(f)})})}return t}function g(e,t){let s;if(e in t.sources)s=e;else{s=null;const o=Object.keys(t.sources);for(const n of o)if(a(n,e)){s=n;break}if(s==null){const n=e.lastIndexOf("/");if(n!=-1){const l=e.substring(n+1);for(const r of o)if(a(r,l)){s=r;break}}}}return s}function a(e,t){let s;if(e==t)s=!0;else if(e.length>=t.length+1){const o="/"+t,n=e.substring(e.length-o.length);s=o==n}else s=!1;return s}
